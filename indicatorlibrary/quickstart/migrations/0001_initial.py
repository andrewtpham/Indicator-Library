# Generated by Django 2.0.5 on 2018-06-21 16:10

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_fields_uuid', models.CharField(blank=True, default=uuid.uuid4, max_length=255, unique=True, verbose_name='Additional Field UUID')),
                ('additional_fields', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Frequency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency_uuid', models.CharField(blank=True, default=uuid.uuid4, max_length=255, unique=True, verbose_name='Frequency UUID')),
                ('frequency', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicator_uuid', models.CharField(blank=True, default=uuid.uuid4, max_length=255, unique=True, verbose_name='Indicator UUID')),
                ('level', models.CharField(blank=True, max_length=255)),
                ('objectives', models.CharField(blank=True, max_length=255, verbose_name='Objective')),
                ('name', models.CharField(max_length=255)),
                ('sector', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255, null=True), size=None)),
                ('subsector', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255, null=True), size=None)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255, null=True), blank=True, null=True, size=8)),
                ('number', models.CharField(blank=True, max_length=255, null=True)),
                ('definition', models.TextField(blank=True, null=True)),
                ('justification', models.TextField(blank=True, max_length=500, null=True, verbose_name='Rationale or Justification for Indicator')),
                ('unit_of_measure', models.CharField(blank=True, max_length=135, null=True, verbose_name='Unit of Measure')),
                ('disaggregation', models.CharField(blank=True, max_length=255)),
                ('baseline', models.CharField(blank=True, max_length=255, null=True)),
                ('lop_target', models.IntegerField(blank=True, default=0, verbose_name='LOP Target')),
                ('rationale_for_target', models.TextField(blank=True, max_length=255, null=True)),
                ('means_of_verification', models.CharField(blank=True, max_length=255, null=True, verbose_name='Means of Verification')),
                ('data_collection_method', models.CharField(blank=True, max_length=255, null=True, verbose_name='Data Collection Method')),
                ('denominator', models.CharField(blank=True, max_length=255, null=True)),
                ('numerator', models.CharField(blank=True, max_length=255, null=True)),
                ('data_points', models.TextField(blank=True, max_length=500, null=True, verbose_name='Data Points')),
                ('responsible_person', models.CharField(blank=True, max_length=255, null=True, verbose_name='Responsible Person(s) and Team')),
                ('method_of_analysis', models.CharField(blank=True, max_length=255, null=True, verbose_name='Method of Analysis')),
                ('information_use', models.CharField(blank=True, max_length=255, null=True, verbose_name='Information Use')),
                ('quality_assurance', models.TextField(blank=True, max_length=500, null=True, verbose_name='Quality Assurance Measures')),
                ('data_issues', models.TextField(blank=True, max_length=500, null=True, verbose_name='Data Issues')),
                ('indicator_changes', models.TextField(blank=True, max_length=500, null=True, verbose_name='Changes to Indicator')),
                ('comments', models.TextField(blank=True, max_length=255, null=True)),
                ('key_performance_indicator', models.BooleanField(default=False, verbose_name='Key Performance Indicator?')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, max_length=500, null=True)),
                ('additional_fields', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='quickstart.AdditionalFields')),
                ('data_collection_frequency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='data_collection_frequency', to='quickstart.Frequency', verbose_name='Frequency of Data Collection')),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_uuid', models.CharField(blank=True, default=uuid.uuid4, max_length=255, unique=True, verbose_name='Source UUID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.AddField(
            model_name='indicator',
            name='data_source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='quickstart.Source', verbose_name='Indicator Source'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='reporting_frequency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='quickstart.Frequency', verbose_name='Frequency of Reporting'),
        ),
    ]
